#include<iostream>
#include <map>
using namespace std;
int main()
{
    int arr[] = {1, 2, 3, -3, 1, 1, 1, 4, 2, -3};
    int n = sizeof(arr)/sizeof(arr[1]);
    int k = 3;
    int count = 0;
    int i, j;
    map<int, int> mpp;
    mpp[0]=1;
    int presum = 0;
    for(i=0; i<n; i++)
    {
        presum+=arr[i];
        int remove = presum -k;
        count +=mpp[remove];
        mpp[presum]++;
    }
    cout<<count;

    //OPTIMAL - PREFIX SUMMATION 
    //______|________
    //  x-k      k
    //_______________
    // ------x-------

    // for(int i = 0; i<n; i++)
    // {
    //     int sum = 0;
        
    //     for(j = i; j<n; j++)
    //     {
    //         sum +=arr[j];
    //         if(sum==k)
    //     {
    //         count++;
    //     }
    //     }
        
    // }     
    // cout<<count;
    //time complexity = O(n^2)
    //space complexity = O(1)
}
